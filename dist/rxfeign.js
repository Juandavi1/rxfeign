"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rx_http_request_1=require("@akanass/rx-http-request"),operators_1=require("rxjs/operators");require("reflect-metadata");const pathParamMetadataKey=Symbol("__pathParam__"),queryMetadataKey=Symbol("__queryParam__"),classMetadataKey=Symbol("__class__"),bodyMetadataKey=Symbol("__body__"),pathParamPropertyMetadataKey=Symbol("__pathParamProperty__"),mapperMetadataKey=Symbol("__mapper__"),headersMetadataKey=Symbol("__headers__"),beforeMetadataKey=Symbol("__headers__"),exceptionHandlerMetadataKey=Symbol("__handlerError__");function addInterceptor(e){exports.interceptors.unshift(new e)}function Client(e){return t=>Reflect.defineMetadata(classMetadataKey,e,t)}function Get(e,t=400){return request("get",e,t)}function Post(e,t=400){return request("post",e,t)}function Put(e,t=400){return request("put",e,t)}function Patch(e,t=400){return request("patch",e,t)}function Delete(e,t=400){return request("delete",e,t)}function request(e,t,a){return(r,n,o)=>{o.value=((...o)=>{const s=Reflect.getMetadata(classMetadataKey,r.constructor),d=Reflect.getMetadata(pathParamMetadataKey,r,n)||[],c=Reflect.getMetadata(queryMetadataKey,r,n)||[],p=Reflect.getMetadata(bodyMetadataKey,r,n)||[],u=Reflect.getMetadata(mapperMetadataKey,r,n)||null,i=Reflect.getMetadata(headersMetadataKey,r,n)||null,l=Reflect.getMetadata(beforeMetadataKey,r,n)||null,y=Reflect.getMetadata(exceptionHandlerMetadataKey,r,n)||null,f=new HeadersHttp;let h=String();const m=o;let M=String(t);M=UtilsHttp.buildPathParams(d,m,M);const _=UtilsHttp.buildQueryParams(c,m);"object"==typeof s?(h=s.url,UtilsHttp.prepareHeaders(s.headers,f)):h=s,h=h.concat(M).concat("?"===_?"":_);const g="get"!==e?UtilsHttp.prepareBody(p,m):String();i&&Object.keys(i).forEach(e=>f.set(e,i[e]));let P={url:h,body:g,headers:f.getHeaders(),method:e};return P=l?l(P):P,exports.interceptors.forEach(e=>P=e.intercep(P)),rx_http_request_1.RxHR[e](P.url,{headers:P.headers,body:P.body,qsStringifyOptions:{arrayFormat:"repeat"}}).pipe(operators_1.map(e=>mapBodyAndControlError(e,y,a)),operators_1.map(e=>u?u(e):e))})}}function mapBodyAndControlError(e,t,a){const{body:r,statusCode:n,request:o}=e.response;if(n<a)return r?JSON.parse(r):r;throw t?t(r,n,o):r&&r.message&&r.error?new HttpRequestException(r.error,n,r.message):new HttpRequestException(JSON.stringify(r),n,String())}function PathParam(e){return(t,a,r)=>{const n=Reflect.getOwnMetadata(pathParamMetadataKey,t,a)||[];n.unshift({indexArgument:r,paramValue:e}),Reflect.defineMetadata(pathParamMetadataKey,n,t,a)}}function Query(e){return(t,a,r)=>{const n=Reflect.getOwnMetadata(queryMetadataKey,t,a)||[];n.unshift({indexArgument:r,paramValue:e}),Reflect.defineMetadata(queryMetadataKey,n,t,a)}}function Body(e,t,a){const r=Reflect.getOwnMetadata(bodyMetadataKey,e,t)||[];r.unshift(a),Reflect.defineMetadata(bodyMetadataKey,r,e,t)}function PathParamProperty(e=!0){return(e,t)=>Reflect.defineMetadata(pathParamPropertyMetadataKey,{name:t},e,t)}function Mapper(e){return(t,a)=>Reflect.defineMetadata(mapperMetadataKey,e,t,a)}function Headers(e){return(t,a)=>Reflect.defineMetadata(headersMetadataKey,e,t,a)}function Before(e){return(t,a)=>Reflect.defineMetadata(beforeMetadataKey,e,t,a)}function HandlerError(e){return(t,a)=>Reflect.defineMetadata(exceptionHandlerMetadataKey,e,t,a)}exports.interceptors=[],exports.addInterceptor=addInterceptor,exports.Client=Client,exports.Get=Get,exports.Post=Post,exports.Put=Put,exports.Patch=Patch,exports.Delete=Delete,exports.PathParam=PathParam,exports.Query=Query,exports.Body=Body,exports.PathParamProperty=PathParamProperty,exports.Mapper=Mapper,exports.Headers=Headers,exports.Before=Before,exports.HandlerError=HandlerError;class UtilsHttp{static prepareHeaders(e={},t){Object.keys(e).forEach(a=>t.has(e[a])?null:t.set(a,e[a])),t.has("Content-Type")||t.set("Content-Type","application/json")}static buildQueryParams(e,t){let a="?";const r=String();return(e=e.filter(e=>t[e.indexArgument])).forEach((n,o)=>{if("object"==typeof t[n.indexArgument]){const e=Object.keys(t[n.indexArgument])||[];let o=0;for(const s in t[n.indexArgument])a=a.concat(`${s}=${t[n.indexArgument][s]}${o===e.length-1?r:"&"}`),o++}else{if(!n.paramValue)return;a=(a=a.length>1?a.concat("&"):a).concat(`${n.paramValue}=${t[n.indexArgument]}${o===e.length-1?r:"&"}`)}}),a}static buildPathParams(e,t,a){a=a.replace(/\s/g,"").trim();return e.filter(e=>e.paramValue).forEach(e=>{if(!e.paramValue)return;const r="{".concat(e.paramValue.toString()).concat("}");a.includes(r)&&(a=a.replace(r,t[e.indexArgument]))}),e.filter(e=>!e.paramValue).map(e=>a+=`/${t[e.indexArgument]}`),t.filter(e=>e&&"object"==typeof e).forEach(e=>Object.keys(e).forEach(t=>{const r=Reflect.getMetadata(pathParamPropertyMetadataKey,e,t);r&&(a=a.replace(`{${r.name}}`,e[r.name]))})),a}static prepareBody(e,t){let a={};return e.forEach(e=>a=Object.assign({},a,t[e])),e.length?JSON.stringify(a):String()}}class HttpRequestException{constructor(e,t,a){this.error=e,this.statusCode=t,this.message=a}}exports.HttpRequestException=HttpRequestException;class HeadersHttp{constructor(){this.headers=new Map}has(e){return this.headers.has(e)}set(e,t){return this.headers.set(e,t),this}getHeaders(){const e=Object();return Array.from(this.headers.keys()).forEach(t=>e[t]=this.headers.get(t)),e}}