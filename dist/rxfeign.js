"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const operators_1=require("rxjs/operators");require("reflect-metadata");const axios_1=require("axios"),rxjs_1=require("rxjs"),pathParamMetadataKey=Symbol("__pathParam__"),queryMetadataKey=Symbol("__queryParam__"),classMetadataKey=Symbol("__class__"),bodyMetadataKey=Symbol("__body__"),pathParamPropertyMetadataKey=Symbol("__pathParamProperty__"),mapperMetadataKey=Symbol("__mapper__"),headersMetadataKey=Symbol("__headers__"),beforeMetadataKey=Symbol("__headers__"),exceptionHandlerMetadataKey=Symbol("__handlerError__"),configMetadataKey=Symbol("__config__");function request(e,t="",a){return(r,o,s)=>{s.value=((...s)=>{let n=Reflect.getMetadata(classMetadataKey,r.constructor);const c=Reflect.getMetadata(pathParamMetadataKey,r,o)||[],d=Reflect.getMetadata(queryMetadataKey,r,o)||[],l=Reflect.getMetadata(bodyMetadataKey,r,o)||[],p=Reflect.getMetadata(mapperMetadataKey,r,o)||null,i=Reflect.getMetadata(headersMetadataKey,r,o)||Object(),u=Reflect.getMetadata(beforeMetadataKey,r,o)||null,y=Reflect.getMetadata(exceptionHandlerMetadataKey,r,o)||null,f=Reflect.getMetadata(configMetadataKey,r,o)||Object();"/"==t.charAt(0)&&(t=t.substr(1,t.length));let m="object"==typeof n?n.url:n,M=String(t);M=UtilsHttp.buildPathParams(c,s,M);const g=UtilsHttp.buildQueryParams(d,s);"/"!==m.charAt(m.length-1)&&(m=m.concat("/")),m=m.concat(M).concat("?"===g?"":g);const h="get"!==e?UtilsHttp.prepareBody(l,s):Object();"object"==typeof n&&(n.headers=Object.assign({},n.headers,i));let _={url:m,body:h,headers:"object"==typeof n?n.headers:i||Object(),method:e};return _=u?u(_):_,exports.interceptors.forEach(e=>_=e.intercep(_)),rxjs_1.from(axios_1.default.request(Object.assign({},"object"==typeof n?n:Object(),f,{method:_.method,data:_.body,headers:_.headers,url:_.url}))).pipe(operators_1.map(({data:e})=>p?p(e):e),operators_1.catchError(e=>mapError(e,y,a)))})}}function mapError(e,t,a){const{config:r}=e,{response:o}=e,{data:s}=r,n=t?t(e):s&&s.message&&s.error?new FeignRequestException(s.error,o?o.status:504,s.message):new FeignRequestException(JSON.stringify(s),o?o.status:504,String());return rxjs_1.throwError(n)}function Body(e,t,a){const r=Reflect.getOwnMetadata(bodyMetadataKey,e,t)||[];r.unshift(a),Reflect.defineMetadata(bodyMetadataKey,r,e,t)}exports.interceptors=[],exports.addInterceptors=((...e)=>e.forEach(e=>exports.interceptors.unshift(new e))),exports.Client=(e=>t=>Reflect.defineMetadata(classMetadataKey,e,t)),exports.Get=((e,t=400)=>request("get",e,t)),exports.Post=((e,t=400)=>request("post",e,t)),exports.Put=((e,t=400)=>request("put",e,t)),exports.Patch=((e,t=400)=>request("patch",e,t)),exports.Delete=((e,t=400)=>request("delete",e,t)),exports.PathParam=(e=>(t,a,r)=>{const o=Reflect.getOwnMetadata(pathParamMetadataKey,t,a)||[];o.unshift({indexArgument:r,paramValue:e}),Reflect.defineMetadata(pathParamMetadataKey,o,t,a)}),exports.Config=(e=>(t,a)=>Reflect.defineMetadata(configMetadataKey,e,t,a)),exports.Query=(e=>(t,a,r)=>{const o=Reflect.getOwnMetadata(queryMetadataKey,t,a)||[];o.unshift({indexArgument:r,paramValue:e}),Reflect.defineMetadata(queryMetadataKey,o,t,a)}),exports.Body=Body,exports.PathParamProperty=(()=>(e,t)=>Reflect.defineMetadata(pathParamPropertyMetadataKey,{name:t},e,t)),exports.Mapper=(e=>(t,a)=>Reflect.defineMetadata(mapperMetadataKey,e,t,a)),exports.Headers=(e=>(t,a)=>Reflect.defineMetadata(headersMetadataKey,e,t,a)),exports.Before=(e=>(t,a)=>Reflect.defineMetadata(beforeMetadataKey,e,t,a)),exports.HandlerError=(e=>(t,a)=>Reflect.defineMetadata(exceptionHandlerMetadataKey,e,t,a));class UtilsHttp{static buildQueryParams(e,t){let a="?";const r=String();return(e=e.filter(e=>t[e.indexArgument])).forEach((o,s)=>{if("object"==typeof t[o.indexArgument]){const e=Object.keys(t[o.indexArgument])||[];let s=0;for(const n in t[o.indexArgument])a=a.concat(`${n}=${t[o.indexArgument][n]}${s===e.length-1?r:"&"}`),s++}else{if(!o.paramValue)return;a=(a=a.length>1?a.concat("&"):a).concat(`${o.paramValue}=${t[o.indexArgument]}${s===e.length-1?r:"&"}`)}}),a}static buildPathParams(e,t,a){a=a.replace(/\s/g,"").trim();return e.filter(e=>e.paramValue).forEach(e=>{if(!e.paramValue)return;const r="{".concat(e.paramValue.toString()).concat("}");a.includes(r)&&(a=a.replace(r,t[e.indexArgument]))}),e.filter(e=>!e.paramValue).map(e=>a+=`/${t[e.indexArgument]}`),t.filter(e=>e&&"object"==typeof e).forEach(e=>Object.keys(e).forEach(t=>{const r=Reflect.getMetadata(pathParamPropertyMetadataKey,e,t);r&&(a=a.replace(`{${r.name}}`,e[r.name]))})),a}static prepareBody(e=[],t=[]){let a={};return e.filter(e=>"object"==typeof t[e]&&t[e]).forEach(e=>a=Object.assign({},a,t[e])),a}}class FeignRequestException{constructor(e,t,a){this.error=e,this.statusCode=t,this.message=a}}exports.FeignRequestException=FeignRequestException;