"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const rx_http_request_1=require("@akanass/rx-http-request"),operators_1=require("rxjs/operators");require("reflect-metadata");const rx_http_request_2=require("@akanass/rx-http-request/lib/rx-http-request"),pathParamMetadataKey=Symbol("__pathParam__"),queryMetadataKey=Symbol("__queryParam__"),classMetadataKey=Symbol("__class__"),bodyMetadataKey=Symbol("__body__"),pathParamPropertyMetadataKey=Symbol("__pathParamProperty__"),mapperMetadataKey=Symbol("__mapper__"),headersMetadataKey=Symbol("__headers__"),beforeMetadataKey=Symbol("__headers__"),exceptionHandlerMetadataKey=Symbol("__handlerError__");class Http extends rx_http_request_2.RxHttpRequest{static addInterceptor(a){this.interceptors.unshift(new a)}static client(a){return b=>Reflect.defineMetadata(classMetadataKey,a,b)}static get(a,b,c=400){return this.request("get",a,b,c)}static post(a,b,c=400){return this.request("post",a,b,c)}static put(a,b,c=400){return this.request("put",a,b,c)}static patch(a,b,c=400){return this.request("patch",a,b,c)}static delete(a,b,c=400){return this.request("delete",a,b,c)}static request(a,b,c,d){return(e,f,g)=>{g.value=(...h)=>{const j=Reflect.getMetadata(classMetadataKey,c),k=Reflect.getMetadata(pathParamMetadataKey,e,f)||[],l=Reflect.getMetadata(queryMetadataKey,e,f)||[],m=Reflect.getMetadata(bodyMetadataKey,e,f)||[],n=Reflect.getMetadata(mapperMetadataKey,e,f)||null,o=Reflect.getMetadata(headersMetadataKey,e,f)||null,p=Reflect.getMetadata(beforeMetadataKey,e,f)||null,q=Reflect.getMetadata(exceptionHandlerMetadataKey,e,f)||null,r=new Headers;let s=String();const t=h;let u=b+"";u=UtilsHttp.buildPathParams(k,t,u);const v=UtilsHttp.buildQueryParams(l,t);"object"==typeof j?(s=j.url,UtilsHttp.prepareHeaders(j.headers,r)):s=j,s=s.concat(u).concat("?"===v?"":v);const w="get"===a?String():UtilsHttp.prepareBody(m,t);o&&Object.keys(o).forEach(y=>r.set(y,o[y]));let x={url:s,body:w,headers:r.getHeaders(),method:a};return x=p?p(x):x,this.interceptors.forEach(y=>x=y.intercep(x)),rx_http_request_1.RxHR[a](x.url,{headers:x.headers,body:x.body,qsStringifyOptions:{arrayFormat:"repeat"}}).pipe(operators_1.map(y=>this.mapBodyAndControlError(y,q,d)),operators_1.map(y=>n?n(y):y))}}}static mapBodyAndControlError(a,b,c){const{body:d,statusCode:e,request:f}=a.response;if(e<c)return d?JSON.parse(d):d;if(b)throw b(d,e,f);else if(d&&d.message&&d.error)throw new HttpRequestException(d.error,e,d.message);else throw new HttpRequestException(JSON.stringify(d),e,String())}static pathParam(a){return(b,c,d)=>{const e=Reflect.getOwnMetadata(pathParamMetadataKey,b,c)||[];e.unshift({indexArgument:d,paramValue:a}),Reflect.defineMetadata(pathParamMetadataKey,e,b,c)}}static query(a){return(b,c,d)=>{const e=Reflect.getOwnMetadata(queryMetadataKey,b,c)||[];e.unshift({indexArgument:d,paramValue:a}),Reflect.defineMetadata(queryMetadataKey,e,b,c)}}static body(a,b,c){const d=Reflect.getOwnMetadata(bodyMetadataKey,a,b)||[];d.unshift(c),Reflect.defineMetadata(bodyMetadataKey,d,a,b)}static pathParamProperty(a=!0){return(b,c)=>Reflect.defineMetadata(pathParamPropertyMetadataKey,{name:c},b,c)}static mapper(a){return(b,c)=>Reflect.defineMetadata(mapperMetadataKey,a,b,c)}static headers(a){return(b,c)=>Reflect.defineMetadata(headersMetadataKey,a,b,c)}static before(a){return(b,c)=>Reflect.defineMetadata(beforeMetadataKey,a,b,c)}static handlerError(a){return(b,c)=>Reflect.defineMetadata(exceptionHandlerMetadataKey,a,b,c)}}Http.interceptors=[],exports.Http=Http;class UtilsHttp{static prepareHeaders(a,b){Object.keys(a).forEach(c=>b.has(a[c])?null:b.set(c,a[c])),b.has("Content-Type")||b.set("Content-Type","application/json")}static buildQueryParams(a,b){let c="?";const d="&",e=String();return a=a.filter(f=>b[f.indexArgument]),a.forEach((f,g)=>{if("object"==typeof b[f.indexArgument]){const h=Object.keys(b[f.indexArgument])||[];let j=0;for(const k in b[f.indexArgument])c=c.concat(`${k}=${b[f.indexArgument][k]}${j==h.length-1?e:d}`),j++}else{if(!f.paramValue)return;c=1<c.length?c.concat(d):c,c=c.concat(`${f.paramValue}=${b[f.indexArgument]}${g===a.length-1?e:d}`)}}),c}static buildPathParams(a,b,c){c=c.replace(/\s/g,"").trim();return a.filter(f=>f.paramValue).forEach(f=>{if(f.paramValue){const g="{".concat(f.paramValue.toString()).concat("}");c.includes(g)&&(c=c.replace(g,b[f.indexArgument]))}}),a.filter(f=>!f.paramValue).map(f=>c+=`/${b[f.indexArgument]}`),b.filter(f=>"object"==typeof f).forEach(f=>{Object.keys(f).forEach(g=>{const h=Reflect.getMetadata(pathParamPropertyMetadataKey,f,g);h&&(c=c.replace(`{${h.name}}`,f[h.name]))})}),c}static prepareBody(a,b){let c={};return a.forEach(d=>c=Object.assign({},c,b[d])),a.length?JSON.stringify(c):String()}}class HttpRequestException{constructor(a,b,c){this.error=a,this.statusCode=b,this.message=c}}exports.HttpRequestException=HttpRequestException;class Headers{constructor(){this.headers=new Map}has(a){return this.headers.has(a)}set(a,b){return this.headers.set(a,b),this}getHeaders(){const a={};return Array.from(this.headers.keys()).forEach(b=>a[b]=this.headers.get(b)),a}}